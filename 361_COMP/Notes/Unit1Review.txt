Unit 1 Review

1. An information system is a collection of interelated systems which collects, processes,
stores, and returns information as needed to a business to complete business tasks.

2. The purpose of system analysis is to manage the people, problem, and planning
of a project in order to capture the vision of the client in a practical and 
realistic way.

3. System analysis covers soft skills such as interacting with people, interviewing
customers, and interviewing, in addition to technical breakdowns and systems planning.
Systems design works more directy with the breakdown and style of the project coding.

4. A project is a planned undertaking with a beginning and end, accomplishing a goal.

5. Identify (Approve), Plan (Monitor), Discover (Understand), Design, Build (Test), Complete (Deploy)

6. Agile development is receptive to change by working through iterative loops, meeting goals
through multiple cycles and adapting the problem through each iteration.

7. System Vision Document is developed to identify the benefits to the company, as
well as the capabilities of the system.

8. System refers to the entire functionality of the project. A subsystem is a localized
chunk of features that work together to make one aspect of the project function.

9. A work breakdown structure serves to allocate set amounts of time to each project 
and help to demonstrate the progress of the project. If behind, work can be 
extended or people hired.

10. 

11. Use cases help provide information about classes and properties by utlizing nouns 
and adjectives. Use case diagrams help to build activity diagrams (workflow) by showing how
users will intend to use the program - therefore designing relationships between classes.

12. A class diagram shows the relationships and interactions between different classes
within a project. 

13. Use case diagram and class diagram begin the process of developing at a low level,
allowing mid level and low level planning to begin.

14. An activity diagram is also known as a workflow diagram. It shows the logical flow from 
class to class during regular operation of the program.

15. An activity diagram will show UI elements where one system crosses into another system - each 
time that happens, information is either shown or captured through UI elements.

16. Architecutral design is intended to provide focus for the projects - tablet, mobile, 
desktop, web. Will a database be used? Local storage? Internet? This is all determined beforehand.

17. A design class diagram shows which classes have access to elements of other classes.

18. Design teests - run tests - if they failed, document errors - fix issues - run tests 
- repeat until complete.

19. User acceptance testing allows users to actually work with the program, allowing direct 
feedback from clients.

20. Seperate iterations allow room for change. By working in iterations, new needs can be assessed
and old needs corrected.

21. To complete the basics of a system as it is understood currently, and create a solution
which is extendible to further needs.
